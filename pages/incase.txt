import React, {useState} from "react";
import { useRouter } from "next/router";
import { CentralisedBody, InputTextField } from "../components/utilityComponents";
import { Form, Col, Row, Button, InputGroup, FormGroup } from "react-bootstrap";
import { InputText } from "../components/text-input/text-input";
import MyImage from "../components/images/imageDiv";
import SignUpImg from '../components/images/sinup.svg';
import Link from "next/link";

const SignUp = () => {
  const router = useRouter();
  const query = router.query;
  const [username, updateUsername] = useState< string >('');
  const [password, updatePassword] = useState< string >('');
  const [email, updateEmail] = useState< string >('');
  const handleSubmit = (e:React.FormEvent<HTMLFormElement>)=>{
    e.preventDefault();
    const formValues = JSON.stringify({Name: username, Pass: password, Email: email});
    alert(formValues);
  }
  return (
    <>
   
      <div style={{ height: "100vh" }}>
        <div
          className="container-fluid bg-primary d-flex justify-content-center"
          style={{ height: "40%" }}
        ><MyImage url={SignUpImg} classes='p-2 h-80 w-75'/>
          
        </div>
        <div className="h-80" style={{ marginTop: "-15vh" }}>
          <div
            className="border h-100 shadow-lg p-3 bg-light"
            style={{
              zIndex: "6",
              borderTopLeftRadius: "30px",
              borderTopRightRadius: "30px",
            }}
          >
            <center>
                <p className="arima fs-4">Create New Account</p>
                <hr />
            </center>
            
            <form onSubmit={handleSubmit} >
            <InputTextField labelName="Username" typeName="text" iconType="fa fa-user" onChangeFxn={event=>
             updateUsername(event.currentTarget.value) 
            }/>
           <InputTextField labelName="Email" typeName="email" iconType="fa fa-envelope" onChangeFxn={event=>
             updateEmail(event.currentTarget.value) 
            }/>
          <InputTextField labelName="Password" typeName="password" iconType="fa fa-key" onChangeFxn={event=>
             updatePassword(event.currentTarget.value) 
            }/>
           <center>
           <button style={{fontFamily:'Arima', backgroundColor: '#FFAC1C', color:'white'}} type="submit" className=" p-2 btn  mt-4 border-0 rounded w-100 shadow-lg ">
                            Sign Up
            </button>
           </center>
           <div className='d-flex p-0 justify-content-center '>
                            <p className=' caption px-300'>I already have an account, <Link href="./login"><b>Login</b></Link></p>
                        </div>
            </form>
           
            
            
          </div>
        </div>
      </div>
    </>
  );
};

export default SignUp;
<Carousel responsive={responsive} arrows={false} afterChange={(previousSlide, state)=>{
          setSlide(state.currentSlide);
        }}>
           <div className="border  container-fluid" style={{minHeight:'80vh'}}>
          {
           typeof pageData.data !== 'string'?
          typeof  pageData.data.questions !== 'string'?
          
          pageData.data.questions.files.map(elmt=>{
            return(
              <img alt="question image" src={`${questionURL}${elmt}`} key={Math.floor(Math.random() * 1000) + 1} className="img-fluid" />
            )
          })
          :<p className="text-center fs-3">{pageData.data.questions}</p>

           :<p className="text-center fs-3">{pageData.data}</p>
          }
          </div>
          <div className="border  container-fluid" style={{height:'80vh'}}>
          {
           typeof pageData.data !== 'string'?
          typeof  pageData.data.solutions !== 'string'?
          
          pageData.data.solutions.files.map(elmt=>{
            return(
              <img alt="question image" src={`${questionURL}${elmt}`} key={Math.floor(Math.random() * 10000) + 1001} className="img-fluid" />
            )
          })
          :<p className="text-center fs-3">{pageData.data.solutions}</p>

           :<p className="text-center fs-3">{pageData.data}</p>
          }
          </div>
          <div className="border  container-fluid" style={{height:'80vh'}}>
          {
           typeof pageData.data !== 'string'?
          typeof  pageData.data.solutions !== 'string'?
          
          <p>{JSON.stringify(pageData.data.solutions.directory)}</p>
          :<p className="text-center fs-3">{pageData.data.solutions}</p>

           :<p className="text-center fs-3">{pageData.data}</p>
          }
          </div>
         
         
        </Carousel>